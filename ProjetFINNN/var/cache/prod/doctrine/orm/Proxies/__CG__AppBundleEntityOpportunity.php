<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Opportunity extends \AppBundle\Entity\Opportunity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idAssoc', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'domaine', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'descr', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jd', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'startDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'endDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'limitDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'adr', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'img1', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'img2', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'img3'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'idAssoc', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'domaine', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'descr', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'jd', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'startDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'endDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'limitDate', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'adr', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'img1', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'img2', '' . "\0" . 'AppBundle\\Entity\\Opportunity' . "\0" . 'img3'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Opportunity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdAssoc($idAssoc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdAssoc', [$idAssoc]);

        return parent::setIdAssoc($idAssoc);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdAssoc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAssoc', []);

        return parent::getIdAssoc();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaine($domaine)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaine', [$domaine]);

        return parent::setDomaine($domaine);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaine', []);

        return parent::getDomaine();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescr($descr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescr', [$descr]);

        return parent::setDescr($descr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescr', []);

        return parent::getDescr();
    }

    /**
     * {@inheritDoc}
     */
    public function setJd($jd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJd', [$jd]);

        return parent::setJd($jd);
    }

    /**
     * {@inheritDoc}
     */
    public function getJd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJd', []);

        return parent::getJd();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLimitDate($limitDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLimitDate', [$limitDate]);

        return parent::setLimitDate($limitDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLimitDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLimitDate', []);

        return parent::getLimitDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdr($adr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdr', [$adr]);

        return parent::setAdr($adr);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdr', []);

        return parent::getAdr();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg1($img1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg1', [$img1]);

        return parent::setImg1($img1);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg1', []);

        return parent::getImg1();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg2($img2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg2', [$img2]);

        return parent::setImg2($img2);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg2', []);

        return parent::getImg2();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg3($img3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg3', [$img3]);

        return parent::setImg3($img3);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg3', []);

        return parent::getImg3();
    }

}
