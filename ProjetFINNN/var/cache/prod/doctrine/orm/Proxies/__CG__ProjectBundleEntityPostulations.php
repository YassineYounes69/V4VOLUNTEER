<?php

namespace Proxies\__CG__\ProjectBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Postulations extends \ProjectBundle\Entity\Postulations implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'id', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'idVol', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'idOp', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'etatPos', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'cv', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'motivation', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'domaineEtudes', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'experience', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'lvlEng', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'lvlFr', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'id_user', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'id_entretien'];
        }

        return ['__isInitialized__', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'id', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'idVol', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'idOp', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'etatPos', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'cv', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'motivation', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'domaineEtudes', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'experience', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'lvlEng', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'lvlFr', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'id_user', '' . "\0" . 'ProjectBundle\\Entity\\Postulations' . "\0" . 'id_entretien'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Postulations $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setIdUser($id_user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUser', [$id_user]);

        return parent::setIdUser($id_user);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', []);

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdEntretien()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdEntretien', []);

        return parent::getIdEntretien();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdEntretien($id_entretien)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdEntretien', [$id_entretien]);

        return parent::setIdEntretien($id_entretien);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdVol($idVol)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdVol', [$idVol]);

        return parent::setIdVol($idVol);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdVol()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdVol', []);

        return parent::getIdVol();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdOp($idOp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdOp', [$idOp]);

        return parent::setIdOp($idOp);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdOp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdOp', []);

        return parent::getIdOp();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtatPos($etatPos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtatPos', [$etatPos]);

        return parent::setEtatPos($etatPos);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtatPos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtatPos', []);

        return parent::getEtatPos();
    }

    /**
     * {@inheritDoc}
     */
    public function setCv($cv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCv', [$cv]);

        return parent::setCv($cv);
    }

    /**
     * {@inheritDoc}
     */
    public function getCv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCv', []);

        return parent::getCv();
    }

    /**
     * {@inheritDoc}
     */
    public function setMotivation($motivation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMotivation', [$motivation]);

        return parent::setMotivation($motivation);
    }

    /**
     * {@inheritDoc}
     */
    public function getMotivation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMotivation', []);

        return parent::getMotivation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaineEtudes($domaineEtudes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaineEtudes', [$domaineEtudes]);

        return parent::setDomaineEtudes($domaineEtudes);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaineEtudes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaineEtudes', []);

        return parent::getDomaineEtudes();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperience($experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperience', [$experience]);

        return parent::setExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperience', []);

        return parent::getExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setLvlEng($lvlEng)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLvlEng', [$lvlEng]);

        return parent::setLvlEng($lvlEng);
    }

    /**
     * {@inheritDoc}
     */
    public function getLvlEng()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLvlEng', []);

        return parent::getLvlEng();
    }

    /**
     * {@inheritDoc}
     */
    public function setLvlFr($lvlFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLvlFr', [$lvlFr]);

        return parent::setLvlFr($lvlFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getLvlFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLvlFr', []);

        return parent::getLvlFr();
    }

}
